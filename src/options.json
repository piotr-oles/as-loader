{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "type": "object",
  "additionalProperties": false,
  "properties": {
    "name": {
      "type": "string",
      "description": "The filename template for the target file."
    },
    "context": {
      "type": "string",
      "description": "A custom file context."
    },
    "optimizeLevel": {
      "type": "number",
      "minimum": 0,
      "maximum": 3,
      "description": "How much to focus on optimizing code. [0-3]"
    },
    "shrinkLevel": {
      "type": "number",
      "minimum": 0,
      "maximum": 2,
      "description": "How much to focus on shrinking code size. [0-2]"
    },
    "coverage": {
      "type": "boolean",
      "description": "Re-optimizes until no further improvements can be made."
    },
    "noAssert": {
      "type": "boolean",
      "description": "Replaces assertions with just their value without trapping."
    },
    "runtime": {
      "type": "string",
      "enum": ["full", "half", "stub", "none"],
      "description": "Specifies the runtime variant to include in the program."
    },
    "debug": {
      "type": "boolean",
      "description": "Enables debug information in emitted binaries."
    },
    "trapMode": {
      "type": "string",
      "enum": ["allow", "clamp", "js"],
      "description": "Sets the trap mode to use."
    },
    "noValidate": {
      "type": "boolean",
      "description": "Skips validating the module using Binaryen."
    },
    "features": {
      "type": "object",
      "description": "There are several flags that enable or disable specific WebAssembly or compiler features. By default, only the bare minimum is exposed, and fully standardized WebAssembly features will be used.",
      "properties": {
        "importMemory": {
          "type": "boolean",
          "description": "Imports the memory provided as 'env.memory'."
        },
        "noExportMemory": {
          "type": "boolean",
          "description": "Does not export the memory as 'memory'."
        },
        "initialMemory": {
          "type": "number",
          "description": "Sets the initial memory size in pages."
        },
        "maximumMemory": {
          "type": "number",
          "description": "Sets the maximum memory size in pages."
        },
        "sharedMemory": {
          "type": "boolean",
          "description": "Declare memory as shared. Requires maximumMemory."
        },
        "importTable": {
          "type": "boolean",
          "description": "Imports the function table provided as 'env.table'."
        },
        "exportTable": {
          "type": "boolean",
          "description": "Exports the function table as 'table'."
        },
        "explicitStart": {
          "type": "boolean",
          "description": "Exports an explicit '_start' function to call."
        },
        "enable": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "sign-extension",
              "bulk-memory",
              "simd",
              "threads",
              "reference-types"
            ]
          },
          "description": "Enables WebAssembly features being disabled by default."
        },
        "disable": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": ["mutable-globals"]
          },
          "description": "Disables WebAssembly features being enabled by default."
        },
        "lowMemoryLimit": {
          "type": "boolean",
          "description": "Enforces very low (<64k) memory constraints."
        }
      }
    },
    "linking": {
      "type": "object",
      "description": "Specifying the base offsets of compiler-generated memory respectively the table leaves some space for other data in front. In its current form this is mostly useful to link additional data into an AssemblyScript binary after compilation, be it by populating the binary itself or initializing the data externally upon initialization. One good example is leaving some scratch space for a frame buffer.",
      "properties": {
        "memoryBase": {
          "type": "number",
          "description": "Sets the start offset of emitted memory segments."
        },
        "tableBase": {
          "type": "number",
          "description": "Sets the start offset of emitted table elements."
        }
      }
    }
  }
}
