{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "type": "object",
  "additionalProperties": false,
  "properties": {
    "name": {
      "type": "string",
      "description": "Output file name template, `[name].[contenthash].wasm` by default."
    },
    "raw": {
      "type": "boolean",
      "description": "Return binary instead of emitting file."
    },
    "fallback": {
      "type": "boolean",
      "description": "Use fallback JavaScript file if WebAssembly is not supported."
    },
    "bind": {
      "type": "boolean",
      "description": "Add `as-bind` library files to the compilation (required if you want to use `as-loader/runtime/bind`)."
    },
    "optimizeLevel": {
      "type": "number",
      "minimum": 0,
      "maximum": 3,
      "description": "How much to focus on optimizing code. [0-3]"
    },
    "shrinkLevel": {
      "type": "number",
      "minimum": 0,
      "maximum": 2,
      "description": "How much to focus on shrinking code size. [0-2]"
    },
    "coverage": {
      "type": "boolean",
      "description": "Re-optimizes until no further improvements can be made."
    },
    "noAssert": {
      "type": "boolean",
      "description": "Replaces assertions with just their value without trapping."
    },
    "runtime": {
      "type": "string",
      "enum": ["incremental", "minimal", "stub"],
      "description": "Specifies the runtime variant to include in the program."
    },
    "exportRuntime": {
      "type": "boolean",
      "description": "Exports the runtime helpers (__new, __collect etc.)."
    },
    "debug": {
      "type": "boolean",
      "description": "Enables debug information in emitted binaries."
    },
    "trapMode": {
      "type": "string",
      "enum": ["allow", "clamp", "js"],
      "description": "Sets the trap mode to use."
    },
    "noValidate": {
      "type": "boolean",
      "description": "Skips validating the module using Binaryen."
    },
    "importMemory": {
      "type": "boolean",
      "description": "Imports the memory provided as 'env.memory'."
    },
    "noExportMemory": {
      "type": "boolean",
      "description": "Does not export the memory as 'memory'."
    },
    "initialMemory": {
      "type": "number",
      "description": "Sets the initial memory size in pages."
    },
    "maximumMemory": {
      "type": "number",
      "description": "Sets the maximum memory size in pages."
    },
    "sharedMemory": {
      "type": "boolean",
      "description": "Declare memory as shared. Requires maximumMemory."
    },
    "importTable": {
      "type": "boolean",
      "description": "Imports the function table provided as 'env.table'."
    },
    "exportTable": {
      "type": "boolean",
      "description": "Exports the function table as 'table'."
    },
    "explicitStart": {
      "type": "boolean",
      "description": "Exports an explicit '_start' function to call."
    },
    "enable": {
      "type": "array",
      "items": {
        "type": "string",
        "enum": [
          "sign-extension",
          "bulk-memory",
          "simd",
          "threads",
          "reference-types",
          "gc"
        ]
      },
      "description": "Enables WebAssembly features being disabled by default."
    },
    "disable": {
      "type": "array",
      "items": {
        "type": "string",
        "enum": ["mutable-globals"]
      },
      "description": "Disables WebAssembly features being enabled by default."
    },
    "lowMemoryLimit": {
      "type": "boolean",
      "description": "Enforces very low (<64k) memory constraints."
    },
    "memoryBase": {
      "type": "number",
      "description": "Sets the start offset of emitted memory segments."
    },
    "tableBase": {
      "type": "number",
      "description": "Sets the start offset of emitted table elements."
    }
  }
}
