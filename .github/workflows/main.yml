name: CI/CD
on: [push]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1

      - name: Setup node
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node }}

      - name: Yarn cache directory
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Yarn cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Lint
        run: yarn lint

      - name: Build
        run: yarn build

      - name: Upload build artifact
        uses: actions/upload-artifact@v1
        with:
          name: lib
          path: lib

  test:
    runs-on: ${{ matrix.os }}
    needs: build
    strategy:
      matrix:
        node: [10, 12, 14]
        os: [ubuntu-latest]
        webpack: [webpack@^4.0.0, webpack@^5.0.0]
    steps:
    - uses: actions/checkout@v1

    - name: Setup node
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node }}

    - name: Yarn cache directory
      id: yarn-cache
      run: echo "::set-output name=dir::$(yarn cache dir)"

    - name: Yarn cache
      uses: actions/cache@v2
      with:
        path: ${{ steps.yarn-cache.outputs.dir }}
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-

    - name: Install dependencies
      run: yarn install --frozen-lockfile

    - name: Install webpack version
      run: yarn add --dev ${{ matrix.webpack }}

    - name: Download build artifact
      uses: actions/download-artifact@v1
      with:
        name: lib
        path: lib

    - name: Run tests
      run: yarn test

  release:
    runs-on: ubuntu-latest
    needs: test
    if: "!contains(github.event.head_commit.message, 'ci skip') && !contains(github.event.head_commit.message, 'skip ci')"
    steps:
      - uses: actions/checkout@v2

      - name: Prepare repository
        run: git fetch --unshallow --tags

      - name: Setup node
        uses: actions/setup-node@v1
        with:
          node-version: 12

      - name: Get yarn cache
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v1
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Download build artifact
        uses: actions/download-artifact@v1
        with:
          name: lib
          path: lib

      - name: Release
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: yarn release

